[{"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/index.tsx":"1","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/App.tsx":"2","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/DataTable/index.tsx":"3","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/Footer/index.tsx":"4","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/NavBar/index.tsx":"5","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/BarChart/index.tsx":"6","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/DonutChart/index.tsx":"7","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/Routes.tsx":"8","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/pages/Dashboard/index.tsx":"9","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/pages/Home/index.tsx":"10","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/utils/request.ts":"11","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/utils/format.ts":"12","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/Pagination/index.tsx":"13"},{"size":273,"mtime":1631049346005,"results":"14","hashOfConfig":"15"},{"size":104,"mtime":1631277167587,"results":"16","hashOfConfig":"15"},{"size":1698,"mtime":1631286722002,"results":"17","hashOfConfig":"15"},{"size":588,"mtime":1631049324409,"results":"18","hashOfConfig":"15"},{"size":880,"mtime":1631277789303,"results":"19","hashOfConfig":"15"},{"size":1736,"mtime":1631282666298,"results":"20","hashOfConfig":"15"},{"size":1045,"mtime":1631282653006,"results":"21","hashOfConfig":"15"},{"size":511,"mtime":1631277168907,"results":"22","hashOfConfig":"15"},{"size":910,"mtime":1631277170951,"results":"23","hashOfConfig":"15"},{"size":822,"mtime":1631277799459,"results":"24","hashOfConfig":"15"},{"size":61,"mtime":1631281264569,"results":"25","hashOfConfig":"15"},{"size":430,"mtime":1631283428402,"results":"26","hashOfConfig":"15"},{"size":942,"mtime":1631286788992,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ekoxeq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/index.tsx",[],["56","57"],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/App.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/DataTable/index.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/Footer/index.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/NavBar/index.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/BarChart/index.tsx",["58"],"import axios from 'axios';\nimport { type } from 'os';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSucces } from 'types/sale';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/request';\n\ntype SeriesData ={\n    name : string;\n    data : number[];\n}\n\n\ntype ChartData = {\n    labels:{\n        categories : string[];\n    }\n    series : SeriesData[];\n\n\n}\n\nfunction BarChart() {\n\n    const[chartData , setChartData] = useState<ChartData>({\n        labels: {\n            categories: []\n        },\n        series: [\n            {\n                name: \"\",\n                data: []                   \n            }\n        ]\n\n    });\n\n    useEffect(() =>{\n        axios.get(`${BASE_URL}/sales/success-by-seller`)\n             .then(response =>{\n                const data = response.data as SaleSucces[];\n                const myLabels = data.map(x => x.sellerName);\n                const mySeries = data.map(x => round(100.0 * x.deals / x.visited , 1))\n\n                setChartData({labels: {\n                    categories: myLabels\n                },\n                series: [\n                    {\n                        name: \"Porcetagem de sucesso\",\n                        data: mySeries                   \n                    }\n                ]\n        \n            })\n             })\n\n    } , [])\n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            }\n        },\n    };  \n    return (\n        <Chart\n            options = {{...options , xaxis:chartData.labels}}\n            series = {chartData.series}\n            type = \"bar\"\n            height = \"244\"\n        />\n    );\n  }\n  \nexport default BarChart;","/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/DonutChart/index.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/Routes.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/pages/Dashboard/index.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/pages/Home/index.tsx",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/utils/request.ts",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/utils/format.ts",[],"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/Pagination/index.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]