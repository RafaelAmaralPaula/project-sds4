{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/BarChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChart() {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/success-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(100.0 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"Porcetagem de sucesso\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels\n    },\n    series: chartData.series,\n    type: \"bar\",\n    height: \"244\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BarChart, \"nAdq9LOx9+b4Hr097MiPFjzYd3w=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/rafael/Workspace/GitHub/Meus Projetos/project-sds4/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","BASE_URL","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAiBA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAK,CAACC,SAAD,EAAaC,YAAb,IAA6BN,QAAQ,CAAY;AAClDO,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KAD0C;AAIlDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI;AAJ0C,GAAZ,CAA1C;AAaAZ,EAAAA,SAAS,CAAC,MAAK;AACXD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,QAAS,0BAAtB,EACMU,IADN,CACWC,QAAQ,IAAG;AACd,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIf,KAAK,CAAC,QAAQe,CAAC,CAACG,KAAV,GAAkBH,CAAC,CAACI,OAArB,EAA+B,CAA/B,CAAnB,CAAjB;AAEAf,MAAAA,YAAY,CAAC;AAACC,QAAAA,MAAM,EAAE;AAClBC,UAAAA,UAAU,EAAEO;AADM,SAAT;AAGbN,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,uBADV;AAEIC,UAAAA,IAAI,EAAEQ;AAFV,SADI;AAHK,OAAD,CAAZ;AAWF,KAjBN;AAmBH,GApBQ,EAoBL,EApBK,CAAT;AAsBA,QAAMG,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AAOA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAI,EAAC,GAAGH,OAAJ;AAAcI,MAAAA,KAAK,EAACrB,SAAS,CAACE;AAA9B,KADf;AAEI,IAAA,MAAM,EAAIF,SAAS,CAACI,MAFxB;AAGI,IAAA,IAAI,EAAG,KAHX;AAII,IAAA,MAAM,EAAG;AAJb;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;GApDML,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\nimport { type } from 'os';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSucces } from 'types/sale';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/request';\n\ntype SeriesData ={\n    name : string;\n    data : number[];\n}\n\n\ntype ChartData = {\n    labels:{\n        categories : string[];\n    }\n    series : SeriesData[];\n\n\n}\n\nfunction BarChart() {\n\n    const[chartData , setChartData] = useState<ChartData>({\n        labels: {\n            categories: []\n        },\n        series: [\n            {\n                name: \"\",\n                data: []                   \n            }\n        ]\n\n    });\n\n    useEffect(() =>{\n        axios.get(`${BASE_URL}/sales/success-by-seller`)\n             .then(response =>{\n                const data = response.data as SaleSucces[];\n                const myLabels = data.map(x => x.sellerName);\n                const mySeries = data.map(x => round(100.0 * x.deals / x.visited , 1))\n\n                setChartData({labels: {\n                    categories: myLabels\n                },\n                series: [\n                    {\n                        name: \"Porcetagem de sucesso\",\n                        data: mySeries                   \n                    }\n                ]\n        \n            })\n             })\n\n    } , [])\n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            }\n        },\n    };  \n    return (\n        <Chart\n            options = {{...options , xaxis:chartData.labels}}\n            series = {chartData.series}\n            type = \"bar\"\n            height = \"244\"\n        />\n    );\n  }\n  \nexport default BarChart;"]},"metadata":{},"sourceType":"module"}